package com.xf.oschina.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.xf.oschina.module.book.domain.Book;
import com.xf.oschina.module.book.domain.Categories;
import com.xf.oschina.module.book.domain.NewsList;
import com.xf.oschina.module.login.domain.Token;
import com.xf.oschina.module.story.domain.BooksBean;
import com.xf.oschina.module.user.domain.User;

import com.xf.oschina.dao.BookDao;
import com.xf.oschina.dao.CategoriesDao;
import com.xf.oschina.dao.NewsListDao;
import com.xf.oschina.dao.TokenDao;
import com.xf.oschina.dao.BooksBeanDao;
import com.xf.oschina.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookDaoConfig;
    private final DaoConfig categoriesDaoConfig;
    private final DaoConfig newsListDaoConfig;
    private final DaoConfig tokenDaoConfig;
    private final DaoConfig booksBeanDaoConfig;
    private final DaoConfig userDaoConfig;

    private final BookDao bookDao;
    private final CategoriesDao categoriesDao;
    private final NewsListDao newsListDao;
    private final TokenDao tokenDao;
    private final BooksBeanDao booksBeanDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        categoriesDaoConfig = daoConfigMap.get(CategoriesDao.class).clone();
        categoriesDaoConfig.initIdentityScope(type);

        newsListDaoConfig = daoConfigMap.get(NewsListDao.class).clone();
        newsListDaoConfig.initIdentityScope(type);

        tokenDaoConfig = daoConfigMap.get(TokenDao.class).clone();
        tokenDaoConfig.initIdentityScope(type);

        booksBeanDaoConfig = daoConfigMap.get(BooksBeanDao.class).clone();
        booksBeanDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        bookDao = new BookDao(bookDaoConfig, this);
        categoriesDao = new CategoriesDao(categoriesDaoConfig, this);
        newsListDao = new NewsListDao(newsListDaoConfig, this);
        tokenDao = new TokenDao(tokenDaoConfig, this);
        booksBeanDao = new BooksBeanDao(booksBeanDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Book.class, bookDao);
        registerDao(Categories.class, categoriesDao);
        registerDao(NewsList.class, newsListDao);
        registerDao(Token.class, tokenDao);
        registerDao(BooksBean.class, booksBeanDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        bookDaoConfig.clearIdentityScope();
        categoriesDaoConfig.clearIdentityScope();
        newsListDaoConfig.clearIdentityScope();
        tokenDaoConfig.clearIdentityScope();
        booksBeanDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public CategoriesDao getCategoriesDao() {
        return categoriesDao;
    }

    public NewsListDao getNewsListDao() {
        return newsListDao;
    }

    public TokenDao getTokenDao() {
        return tokenDao;
    }

    public BooksBeanDao getBooksBeanDao() {
        return booksBeanDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
